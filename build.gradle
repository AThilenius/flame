buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'forge'
apply plugin: 'maven'
apply plugin: 'curseforge'

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = config.mod_version
group = "com.scorchforge.flame"
archivesBaseName = "Flame"

minecraft {
    version = config.minecraft_version + "-" + config.forge_version

    replaceIn "reference/Reference.java"
    replace "@MOD_VERSION@", "${config.mod_version}.${System.getenv("BUILD_NUMBER") ?: 0}"
}

version = "${config.minecraft_version}-${config.mod_version}.${System.getenv("BUILD_NUMBER") ?: 0}"


processResources {
    // exclude xcf files, as they are for development only
    exclude '**/*.xcf'

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '*.info'

        // replace version and mcversion
        expand 'mod_version': project.version, 'minecraft_version': project.config.minecraft_version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
    }
}


configurations {
    customCompile
}
dependencies {
    customCompile files (
            './libs/jackson-annotations-2.4.0.jar',
            './libs/jackson-core-2.4.4.jar',
            './libs/jackson-databind-2.4.4.jar'
    )
    compile configurations.customCompile
}
jar{
    from ( configurations.customCompile.collect { it.isDirectory() ? it : zipTree(it)}) { exclude 'META-INF/**' }
}

curse {
    dependsOn 'reobf'
    onlyIf { return project.hasProperty('curseForgeApiKey') }

    projectId = config.curse_forge_id
    apiKey = project.hasProperty('curseForgeApiKey') ? project.curseForgeApiKey : ''
    releaseType = config.release_type
}